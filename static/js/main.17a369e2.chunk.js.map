{"version":3,"sources":["App/hooks.ts","Components/ProductEditForm.tsx","utils/fetchClient.ts","types/ProductsSortType.ts","features/ProductListSlice.ts","api/api.ts","Components/Loader/Loader.tsx","Components/ProductItem.tsx","Components/ProductsList.tsx","App.tsx","App/store.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","initialProduct","imageUrl","name","count","size","width","height","weight","comments","ProductEditForm","useParams","productId","navigate","useNavigate","currentProduct","state","productsListState","products","find","product","id","useState","setProduct","hasAllRequiredData","handleProductDataChange","field","value","prev","handleProductSizeChange","onSubmit","event","preventDefault","type","placeholder","onChange","target","required","Number","min","disabled","onClick","BASE_URL","ENDPOINTS","request","url","method","data","options","body","JSON","stringify","headers","fetch","then","response","ok","Error","json","ProductsSortType","client","fetchProducts","createAsyncThunk","ProductsListSlice","createSlice","initialState","loaded","error","reducers","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","message","productsList","Loader","className","data-cy","ExpandMore","styled","props","expand","other","IconButton","theme","transform","marginLeft","transition","transitions","create","duration","shortest","ProductItem","expanded","setExpanded","Grid","item","xs","sm","md","Card","sx","display","flexDirection","CardMedia","component","objectFit","pt","image","alt","title","CardContent","flexGrow","Typography","gutterBottom","variant","price","CardActions","Button","aria-expanded","aria-label","Collapse","in","timeout","unmountOnExit","paragraph","description","ProductsList","ByName","sortType","setSortType","createTheme","dispatch","useEffect","ThemeProvider","CssBaseline","AppBar","position","Toolbar","ShoppingBag","mr","color","noWrap","Box","bgcolor","pb","Container","maxWidth","align","Stack","direction","spacing","justifyContent","FormControl","InputLabel","Select","labelId","label","MenuItem","ByCount","py","container","map","p","to","Date","getFullYear","App","path","element","replace","index","store","configureStore","reducer","productListReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17a369e2.chunk.js","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport type { TypedUseSelectorHook } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { FormEvent, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useAppSelector } from '../App/hooks';\nimport { Comment } from '../types/Comment';\n\nconst initialProduct = {\n  imageUrl: '',\n  name: '',\n  count: 0,\n  size: {\n    width: 0,\n    height: 0,\n  },\n  weight: '',\n  comments: [] as Comment[],\n};\n\nconst ProductEditForm: React.FC = () => {\n  const { productId = 0 } = useParams();\n  const navigate = useNavigate();\n\n  const currentProduct = useAppSelector(state => (\n    state.productsListState.products.find(product => (\n      `${product.id}` === productId\n    )) || initialProduct\n  ));\n\n  const [product, setProduct] = useState(currentProduct);\n\n  const hasAllRequiredData = product.name\n    && product.imageUrl\n    && product.count\n    && product.size.height\n    && product.size.width\n    && product.weight;\n\n  const handleSumbit = (event: FormEvent) => {\n    event.preventDefault();\n  };\n\n  const handleProductDataChange = (field: string, value: string | number) => {\n    setProduct(prev => ({\n      ...prev,\n      [field]: value,\n    }));\n  };\n\n  const handleProductSizeChange = (field: string, value: number) => {\n    setProduct(prev => ({\n      ...prev,\n      size: {\n        ...prev.size,\n        [field]: value,\n      },\n    }));\n  };\n\n  return (\n    <form\n      onSubmit={handleSumbit}\n    >\n      <label>\n        image URL:\n        <input\n          type=\"text\"\n          placeholder=\"Image URL\"\n          value={product.imageUrl}\n          onChange={(event) => (\n            handleProductDataChange('imageUrl', event.target.value)\n          )}\n          required\n        />\n      </label>\n\n      <label>\n        Name:\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          value={product.name}\n          onChange={(event) => (\n            handleProductDataChange('name', event.target.value)\n          )}\n          required\n        />\n      </label>\n\n      <label>\n        Count:\n        <input\n          type=\"number\"\n          placeholder=\"Enter a number\"\n          value={product.count || ''}\n          onChange={(event) => (\n            handleProductDataChange('count', Number(event.target.value))\n          )}\n          required\n          min=\"1\"\n        />\n      </label>\n\n      <label>\n        Width:\n        <input\n          type=\"number\"\n          placeholder=\"Enter a number\"\n          value={product.size.width || ''}\n          onChange={(event) => (\n            handleProductSizeChange('width', Number(event.target.value))\n          )}\n          required\n          min=\"0\"\n        />\n      </label>\n\n      <label>\n        Height:\n        <input\n          type=\"number\"\n          placeholder=\"Enter a number\"\n          value={product.size.height || ''}\n          onChange={(event) => (\n            handleProductSizeChange('height', Number(event.target.value))\n          )}\n          required\n          min=\"0\"\n        />\n      </label>\n\n      <label>\n        Weight:\n        <input\n          type=\"text\"\n          placeholder=\"Weight\"\n          value={product.weight}\n          onChange={(event) => (\n            handleProductDataChange('weight', event.target.value)\n          )}\n          required\n        />\n      </label>\n\n      <button\n        type=\"submit\"\n        disabled={!hasAllRequiredData}\n      >\n        {productId ? 'Edit product' : 'Add product'}\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => navigate('/')}\n      >\n        Cancel\n      </button>\n    </form>\n  );\n};\n\nexport default ProductEditForm;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'http://localhost:3001';\n\nexport const ENDPOINTS = {\n  products: '/products',\n  productById: (id: number | string) => `/products/${id}`,\n};\n\ntype RequestMethod = 'GET' | 'POST' | 'PUT' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return fetch(BASE_URL + url, options)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  put: <T>(url: string, data: any) => request<T>(url, 'PUT', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","// eslint-disable-next-line no-shadow\nexport enum ProductsSortType {\n  ByName,\n  ByCount,\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { getProducts } from '../api/api';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../App/store';\nimport { Product } from '../types/Product';\n\n// Define a type for the slice state\ninterface ProductsListState {\n  products: Product[]\n  loaded: boolean,\n  error: null | string,\n}\n\nconst initialState: ProductsListState = {\n  products: [],\n  loaded: false,\n  error: null,\n};\n\nexport const fetchProducts = createAsyncThunk<Product[]>(\n  'productsListState/fetchProducts',\n  getProducts,\n);\n\nexport const ProductsListSlice = createSlice({\n  name: 'productsListState',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProducts.pending, (state) => {\n        state.loaded = false;\n      })\n      .addCase(fetchProducts.fulfilled, (state, action) => {\n        state.products = action.payload;\n        state.loaded = true;\n      })\n      .addCase(fetchProducts.rejected, (state, action) => {\n        state.error = action.error?.message || null;\n        state.loaded = true;\n      });\n  },\n});\n\nexport const productsList = (state: RootState) => state.productsListState;\n\nexport default ProductsListSlice.reducer;\n","import { client, ENDPOINTS } from '../utils/fetchClient';\nimport { Product } from '../types/Product';\n\nexport const getProducts = () => {\n  return client.get<Product[]>(ENDPOINTS.products);\n};\n\nexport const createProduct = (data: Omit<Product, 'id'>) => {\n  return client.post<Product>(ENDPOINTS.products, data);\n};\n\nexport const updateProduct = (data: Product) => {\n  return client.put<Product>(ENDPOINTS.productById(data.id), data);\n};\n\nexport const deleteProduct = (id: number | string) => {\n  return client.delete(ENDPOINTS.productById(id));\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import styled from '@emotion/styled';\nimport {\n  Button, Card, CardActions, CardContent, CardMedia, Collapse, Grid, Typography,\n} from '@mui/material';\n// import InfoIcon from '@mui/icons-material/Info';\nimport React, { useState } from 'react';\nimport IconButton, { IconButtonProps } from '@mui/material/IconButton';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n// import ModalProduct from './ModalProduct';\nimport { Product } from '../types/Product';\n\ninterface Props {\n  product: Product;\n}\n\ninterface ExpandMoreProps extends IconButtonProps {\n  expand: boolean;\n}\n\nconst ExpandMore = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props;\n\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n  marginLeft: 'auto',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest,\n  }),\n}));\n\nconst ProductItem: React.FC<Props> = ({ product }) => {\n  const [expanded, setExpanded] = useState(false);\n  // const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <>\n      {/* <tr>\n        <td>\n          <img\n            src={imageUrl}\n            alt={name}\n            style={{ height: '100px' }}\n          />\n        </td>\n        <td>{name}</td>\n        <td>{count}</td>\n        <td>{`${size.height} x ${size.width}`}</td>\n        <td>{weight}</td>\n        <td>\n          {comments?.map(comment => (\n            comment?.description\n          ))}\n        </td>\n        <td>\n          <Link to={`/product/edit/${id}`}>\n            <button type=\"button\">Edit</button>\n          </Link>\n          <button\n            type=\"button\"\n            onClick={() => setIsModalOpen(true)}\n          >\n            Delete\n          </button>\n        </td>\n      </tr> */}\n      {/* <tr>\n        <td>\n          {isModalOpen && (\n            <ModalProduct\n              onModalClose={setIsModalOpen}\n              id={product.id}\n            />\n          )}\n        </td>\n      </tr> */}\n\n      <Grid item xs={12} sm={6} md={4}>\n        <Card\n          sx={{\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <CardMedia\n            component=\"img\"\n            sx={{\n              height: '200px',\n              objectFit: 'contain',\n              pt: 2,\n            }}\n            image={product.image}\n            alt={product.title}\n          />\n          <CardContent sx={{ flexGrow: 1 }}>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {product.title}\n            </Typography>\n            <Typography>\n              Price:\n              {`${product.price} UAH`}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button size=\"small\">Edit</Button>\n            <Button size=\"small\">Delete</Button>\n            <ExpandMore\n              expand={expanded}\n              onClick={handleExpandClick}\n              aria-expanded={expanded}\n              aria-label=\"show more\"\n            >\n              <ExpandMoreIcon />\n            </ExpandMore>\n          </CardActions>\n          <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n            <CardContent>\n              <Typography paragraph>\n                Description:\n              </Typography>\n              <Typography paragraph>\n                {product.description}\n              </Typography>\n            </CardContent>\n          </Collapse>\n        </Card>\n      </Grid>\n    </>\n  );\n};\n\nexport default ProductItem;\n","import {\n  AppBar,\n  Box,\n  Button,\n  Container,\n  createTheme,\n  CssBaseline,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  Stack,\n  ThemeProvider,\n  Toolbar,\n  Typography,\n} from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { ShoppingBag } from '@mui/icons-material';\n\nimport { useAppDispatch, useAppSelector } from '../App/hooks';\nimport { fetchProducts, productsList } from '../features/ProductListSlice';\nimport { ProductsSortType } from '../types/ProductsSortType';\nimport { Loader } from './Loader';\nimport ProductItem from './ProductItem';\n\nexport const ProductsList: React.FC = () => {\n  const { products, loaded } = useAppSelector(productsList);\n  const [sortType, setSortType] = useState(ProductsSortType.ByName);\n\n  const theme = createTheme();\n\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(fetchProducts());\n  }, []);\n\n  return (\n    <>\n      {/* <section>\n        <div>\n          <button\n            type=\"button\"\n\n          >\n            Add new product\n          </button>\n\n          <select\n            value={sortType}\n            onChange={(event) => {\n              setSortType(+event.target.value);\n            }}\n          >\n            <option value={ProductsSortType.ByName}>Name</option>\n            <option value={ProductsSortType.ByCount}>Count</option>\n          </select>\n        </div>\n\n        {loaded\n          ? (\n            <table style={{ width: '100vw' }}>\n              <thead>\n                <tr>\n                  <td>Image</td>\n                  <td>Name</td>\n                  <td>Count</td>\n                  <td>Size</td>\n                  <td>Weight</td>\n                  <td>Comments</td>\n                  <td>Actions</td>\n                </tr>\n              </thead>\n\n              <tbody>\n                {products.map(product => (\n                  <ProductItem\n                    key={product.id}\n                    product={product}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )\n          : <Loader />}\n      </section> */}\n\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <AppBar position=\"relative\">\n          <Toolbar>\n            <ShoppingBag sx={{ mr: 2 }} />\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Products List\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <main>\n          <Box\n            sx={{\n              bgcolor: 'background.paper',\n              pt: 8,\n              pb: 6,\n            }}\n          >\n            <Container maxWidth=\"sm\">\n              <Typography\n                component=\"h1\"\n                variant=\"h2\"\n                align=\"center\"\n                color=\"text.primary\"\n                gutterBottom\n              >\n                Products catalog\n              </Typography>\n              <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" paragraph>\n                You can add a new product or change sorting list\n              </Typography>\n              <Stack\n                sx={{ pt: 4 }}\n                direction=\"row\"\n                spacing={2}\n                justifyContent=\"center\"\n              >\n                <Button\n                  variant=\"contained\"\n                  onClick={() => navigate('/product/edit')}\n                >\n                  Add new product\n                </Button>\n                <FormControl>\n                  <InputLabel id=\"sort-by-select-label\">SortBy</InputLabel>\n                  <Select\n                    labelId=\"sort-by-select-label\"\n                    id=\"sort-by-select-label\"\n                    value={sortType}\n                    label=\"Sort By\"\n                    onChange={(event) => {\n                      setSortType(+event.target.value);\n                    }}\n                  >\n                    <MenuItem value={ProductsSortType.ByName}>Name</MenuItem>\n                    <MenuItem value={ProductsSortType.ByCount}>Count</MenuItem>\n                  </Select>\n                </FormControl>\n              </Stack>\n            </Container>\n          </Box>\n          <Container sx={{ py: 8 }} maxWidth=\"md\">\n            {loaded\n              ? (\n                <Grid container spacing={4}>\n                  {products.map((product) => (\n                    <ProductItem product={product} key={product.id} />\n                  ))}\n                </Grid>\n              ) : (\n                <Loader />\n              )}\n          </Container>\n        </main>\n        {/* Footer */}\n        <Box sx={{ bgcolor: 'background.paper', p: 6 }} component=\"footer\">\n          <Typography variant=\"h6\" align=\"center\" gutterBottom>\n            Footer\n          </Typography>\n          <Typography\n            variant=\"subtitle1\"\n            align=\"center\"\n            color=\"text.secondary\"\n            component=\"p\"\n          >\n            Something here to give the footer a purpose!\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" to=\"https://github.com/illnino380\">\n              Your Website\n            </Link>\n            {' '}\n            {new Date().getFullYear()}\n            .\n          </Typography>\n        </Box>\n      </ThemeProvider>\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  HashRouter, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport ProductEditForm from './Components/ProductEditForm';\nimport { ProductsList } from './Components/ProductsList';\n\nexport const App: React.FC = () => {\n  return (\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<ProductsList />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"*\" element={<h1>Page not found</h1>} />\n\n        <Route path=\"/product/edit\">\n          <Route index element={<ProductEditForm />} />\n          <Route path=\":productId\" element={<ProductEditForm />} />\n        </Route>\n      </Routes>\n    </HashRouter>\n  );\n};\n","/* eslint-disable import/no-cycle */\nimport { configureStore } from '@reduxjs/toolkit';\nimport productListReducer from '../features/ProductListSlice';\n\nexport const store = configureStore({\n  reducer: {\n    productsListState: productListReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { Provider } from 'react-redux';\nimport { App } from './App';\n\nimport { store } from './App/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}